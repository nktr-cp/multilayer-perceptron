[package]
name = "multilayer-perceptron"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "A from-scratch multilayer perceptron implementation in Rust with automatic differentiation"
license = "MIT OR Apache-2.0"
repository = "https://github.com/nktr-cp/multilayer-perceptron"
documentation = "https://docs.rs/multilayer-perceptron"
readme = "README.md"
keywords = ["neural-network", "machine-learning", "autodiff", "wasm", "deep-learning"]
categories = ["science", "algorithms", "wasm"]
rust-version = "1.80.0"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
ndarray = "0.15"
rand = "0.8"
csv = "1.3"
serde = { version = "1.0", features = ["derive"] }

# WASM specific dependencies
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
js-sys = "0.3"
web-sys = { version = "0.3", features = [
    "console",
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "Window",
] }
console_error_panic_hook = "0.1"
wee_alloc = "0.4"

getrandom = { version = "0.2", features = ["js"] }

[dev-dependencies]
# criterion = { version = "0.5", default-features = false } # Temporarily removed due to dependency conflicts
approx = "0.5"

# Test configuration
[profile.test]
opt-level = 0
debug = 2

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"

# Benchmark configuration - disabled for now due to dependency issues
# [[bench]]
# name = "tensor_ops"
# harness = false
